name: release-binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: build-${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
        include:
          - os: linux
            runner: ubuntu-latest
            ext: ""
          - os: windows
            runner: windows-latest
            ext: .exe
          - os: darwin
            runner: macos-latest
            ext: ""
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Build
        shell: bash
        env:
          CGO_ENABLED: 0
        run: |
          VERSION="${GITHUB_REF_NAME}"
          COMMIT="${GITHUB_SHA::7}"
          DATE="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          BIN="logsense_${{ matrix.os }}_${{ matrix.arch }}${{ matrix.ext }}"
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -ldflags "-s -w -X logsense/internal/version.Version=$VERSION -X logsense/internal/version.Commit=$COMMIT -X logsense/internal/version.Date=$DATE" -o "$BIN" ./cmd/logsense
          mkdir -p dist
          if [ "${{ matrix.os }}" = "windows" ]; then
            7z a "dist/${BIN%.exe}.zip" "$BIN"
          else
            tar -C . -czf "dist/${BIN}.tar.gz" "$BIN"
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

